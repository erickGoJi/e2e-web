@inherits LayoutComponentBase
@implements IDisposable

@inject NavigationManager NavigationManager
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <AuthorizeView>
            <Authorized>
                <div class="top-row px-4 auth">
                    Hello, @context.User.Identity?.Name!
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="top-row px-4">
                    <a href="Account/Login">Log in</a>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        <article class="content px-4">
            <ErrorBoundary Context="Exception">
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <div class="alert bg-danger text-white alert-dismissible">
                        @Exception.GetType(): @Exception.Message
                        <button class="btn btn-primary" @onclick="() => Exception = null">Dismiss</button>
                    </div>
                </ErrorContent>
            </ErrorBoundary>
        </article>
    </main>
</div>

<CascadingBlazoredModal></CascadingBlazoredModal>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>


@code {
    private string? currentUrl;
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}